# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

resources:
- repo: self
  clean: true

trigger:
- release/*
- feature/*
- fix/*
- master

variables:
  service: "app0"
  layer: "frontend"
  build: $(Build.BuildId)
  env: "BUILD"
  GENERATE_SOURCEMAP: false
  ENVIRONMENT: "PROD"

jobs:
  - job: build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo $ENVIRONMENT
    - script: echo ArtifactStagingDirectory $(Build.ArtifactStagingDirectory)
    - script: echo SourcesDirectory $(Build.SourcesDirectory)
    - script: echo DefinitionId $(Build.DefinitionId)
    - script: echo DefinitionName $(Build.DefinitionName)
    - script: echo BuildNumber $(Build.BuildNumber)
    - script: echo BuildId $(Build.BuildId)
    - script: echo BuildURI $(Build.BuildURI)
    - script: echo SourceBranch $(Build.SourceBranch)
    - script: echo SourceBranchName $(Build.SourceBranchName)
    - script: echo SourceVersion $(Build.SourceVersion)
    - script: echo Repository.Provider $(Build.Repository.Provider)
    - script: echo RequestedForID $(Build.RequestedForID)
    - script: echo RequestedFor $(Build.RequestedFor)
    - script: echo Type $(Build.Type)
    - script: echo PullRequest.TargetBranch $(Build.PullRequest.TargetBranch)
    - script: echo PullRequest.TargetBranchName $(Build.PullRequest.TargetBranchName)
    - script: ls -la $(Build.SourcesDirectory)/.devops
    - script: ls -la $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        Contents: |
          .devops/*.yaml
        targetFolder: '$(Build.ArtifactStagingDirectory)'    

    - task: PublishBuildArtifacts@1    
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     targetPath: $(Pipeline.Workspace)/.devops'
    #     artifactName: 'drop'
    #     artifactType: 'Container'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'app0'
        dockerfile: $(Build.SourcesDirectory)/Dockerfile
        containerRegistry: 'myContainerRegistry'